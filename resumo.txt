
instalar o angular
sudo npm install -g @angular/cli ou @angular/cli@1.6.4

ver a versão do angular
ng --version

sudo npm install rxjs-compat --save

criando um novo projeto
ng new sistema-ponto-eletronico-app

inicializando o projeto
cd sistema-ponto-eletronico-app
ng serve --aot

acessando o projeto
http://localhost:4200/

Angular Material
https://material.angular.io/
https://material.angular.io/guide/getting-started
https://material.angular.io/components/categories

Na raiz do projeto
instalar dependencias
sudo npm install --save @angular/material @angular/cdk @angular/animations hammerjs @angular/flex-layout


configurar o app.module.ts para acrescentar o component de button
https://material.angular.io/components/button/api

configurar hammerjs no main.ts para que o Material funcione

configurar um theme css para que o Material possa funcionar adequadamente
importando o comando abaixo para o styles.css
@import "@angular/material/prebuilt-themes/indigo-pink.css";

importando fonts do google-api no header do index.html
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

criando o modulo de autenticação
ng g module autenticacao/login

ao criar um novo modulo, importar e declarar no app.module.ts

criar um arquivo index.ts para importar em niveis os modulos

criar o componente na raiz da aplicacao

criando um arquivo de rotas
ng g class app-routing.module

criar um arquivo de rota para o login
ng g class autenticacao/login/login-routing.module

criar um component como porta de entrada para o sistema
ng g class autenticacao/login/components/logar.component
ng g component autenticacao/login/components/login


AppRoutingModule é um singleton, uma unica classe para toda a aplicação criando uma arvore para as outras rotas

http://localhost:4200
http://localhost:4200/login

